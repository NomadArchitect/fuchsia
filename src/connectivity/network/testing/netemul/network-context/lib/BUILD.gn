# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("ethertap") {
  sources = [
    "ethernet_client.cc",
    "ethernet_client.h",
    "ethertap_client.cc",
    "ethertap_client.h",
  ]

  deps = [
    "//sdk/lib/fdio",
    "//src/lib/fxl",
    "//zircon/system/ulib/async:async-cpp",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/fdio-caller",
    "//zircon/system/ulib/fzl",
    "//zircon/system/ulib/zx",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.hardware.ethernet:fuchsia.hardware.ethernet_hlcpp",
    "//sdk/fidl/fuchsia.hardware.ethertap:fuchsia.hardware.ethertap_hlcpp",
    "//sdk/fidl/fuchsia.io:fuchsia.io_hlcpp",
  ]
}

source_set("network_service") {
  testonly = true
  sources = [
    "endpoint.cc",
    "endpoint.h",
    "endpoint_manager.cc",
    "endpoint_manager.h",
    "fake_endpoint.cc",
    "fake_endpoint.h",
    "interceptors/interceptor.h",
    "interceptors/latency.h",
    "interceptors/packet_loss.h",
    "interceptors/reorder.h",
    "network.cc",
    "network.h",
    "network_context.cc",
    "network_manager.cc",
    "network_manager.h",
    "realm_setup.cc",
    "realm_setup.h",
  ]

  deps = [
    ":ethertap",
    "//sdk/fidl/fuchsia.driver.test:fuchsia.driver.test_cpp_wire",
    "//sdk/fidl/fuchsia.hardware.ethertap:fuchsia.hardware.ethertap_cpp_wire",
    "//sdk/lib/component/incoming/cpp",
    "//sdk/lib/device-watcher/cpp",
    "//sdk/lib/fdio",
    "//sdk/lib/fit",
    "//src/lib/fostr",
    "//src/lib/fxl",
    "//zircon/system/ulib/async:async-cpp",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/fbl",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.net.tun:fuchsia.net.tun_hlcpp",
    "//sdk/lib/stdcompat",
    "//src/connectivity/lib/network-device/cpp",
    "//src/connectivity/network/testing/netemul/network-context/fidl:internal_hlcpp",
    "//src/connectivity/network/testing/netemul/network-context/fidl:network_hlcpp",
  ]

  # TODO(fxbug.dev/94768): This target uses mutable tables which are deprecated,
  # rather than builders.
  configs += [ "//build/cpp:fidl-wire-deprecated-mutable-tables" ]
}

source_set("netdump") {
  sources = [
    "netdump.cc",
    "netdump.h",
    "netdump_types.h",
  ]
  deps = [ "//src/lib/fxl" ]
  public_deps = [ "//src/connectivity/network/testing/netemul/network-context/fidl:network_hlcpp" ]
}

executable("network_test_bin") {
  testonly = true

  output_name = "network_test"

  sources = [
    "ethertap_client_unittest.cc",
    "interceptors/interceptors_unittest.cc",
    "netdump_parser.cc",
    "netdump_parser.h",
    "netdump_unittest.cc",
    "network_service_unittest.cc",
  ]

  deps = [
    ":ethertap",
    ":netdump",
    ":network_service",
    "//sdk/fidl/fuchsia.hardware.network:fuchsia.hardware.network_cpp_hlcpp_conversion",
    "//sdk/lib/sys/cpp",
    "//src/connectivity/lib/network-device/cpp",
    "//src/connectivity/network/testing/netemul/network-context/fidl:devmgr_hlcpp",
    "//src/lib/fxl",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//src/lib/testing/predicates",
    "//zircon/system/ulib/fdio-caller",
    "//zircon/system/ulib/fzl",
  ]

  public_deps =
      [ "//sdk/fidl/fuchsia.hardware.ethertap:fuchsia.hardware.ethertap_hlcpp" ]
}
