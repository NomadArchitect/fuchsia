# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/test.gni")

if (is_linux) {
  group("f2fs-compatibility-tests") {
    testonly = true
    deps = [ ":f2fs-compatibility-test($host_toolchain)" ]
  }

  test("f2fs-compatibility-test") {
    sources = [
      "compatibility.cc",
      "dir.cc",
      "file.cc",
      "inline.cc",
      "mkfs_fsck_test.cc",
    ]
    deps = [
      "//src/lib/fxl/test:gtest_main",
      "//src/storage/f2fs",
      "//third_party/googletest:gtest",
      "//zircon/system/ulib/zx",
    ]
  }
}

guest_packages = [
  "//src/virtualization/bin/vmm",
  "//src/virtualization/bin/guest_manager:debian_guest_manager",
  "//src/virtualization/bin/guest_manager:zircon_guest_manager",
  "//src/virtualization/bin/termina_guest_manager:termina_guest_manager_cmp",
  "//src/virtualization/packages",
]

group("tests") {
  testonly = true
  deps = [ ":f2fs-compatibility-test-v2-pkg" ]
  data_deps = guest_packages
}

test("f2fs-compatibility-test-v2") {
  testonly = true

  sources = [
    "v2/compatibility.cc",
    "v2/compatibility.h",
    "v2/dir.cc",
    "v2/file.cc",
    "v2/file_backed_block_device.cc",
    "v2/file_backed_block_device.h",
    "v2/mkfs_fsck_test.cc",
  ]

  deps = [
    "//sdk/lib/sys/inspect/cpp",
    "//src/storage/f2fs:f2fs",
    "//src/virtualization/tests/lib",
    "//src/virtualization/tests/lib:test_main",
    "//third_party/googletest:gtest",
  ]
}

fuchsia_test_component("f2fs-compatibility-test-v2-cmp") {
  component_name = "f2fs-compatibility-test-v2-cmp"
  deps = [
           ":f2fs-compatibility-test-v2",
           "//src/virtualization/tests:test_images",
         ] + guest_packages
  manifest = "v2/f2fs_compatibility.cml"
}

fuchsia_test_package("f2fs-compatibility-test-v2-pkg") {
  package_name = "f2fs-compatibility-test-v2-pkg"
  test_components = [ ":f2fs-compatibility-test-v2-cmp" ]
  test_specs = {
    environments = guest_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}
