# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//src/graphics/lib/magma/gnbuild/magma.gni")

group("tests") {
  testonly = true
  deps = [
    ":integration",
    ":nonhardware_tests",
  ]
}

group("nonhardware_tests") {
  testonly = true
  deps = [
    ":msd_arm_mali_lifecycle_tests",
    ":msd_arm_mali_nonhardware_tests",
  ]
}

group("integration") {
  testonly = true
  deps = [
    ":magma-conformance-tests-arm",
    ":msd-arm-mali-integration-tests",
  ]
}

fuchsia_unittest_package("msd_arm_mali_nonhardware_tests") {
  deps = [ "unit_tests:msd_arm_mali_nonhardware_tests" ]
  manifest = "meta/msd_arm_mali_nonhardware_tests.cml"
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
  test_type = "system"
}

# Target which deps on mandatory shards to include in CML files.
# Any shards added as data deps will be automatically added
# to the target's generated .cml file.
# If you would rather verify that a shard's routes are included
# in a .cml file but not actually add them, you should instead
# add a data_dep directly on the shard from your _package build rule,
# which changes the include() to an assert() rule.
group("arm_mali_include_shard") {
  # Automatically include the syslog shard in generated CML files.
  data_deps = [ "//sdk/lib/syslog:client_includes" ]
}

fuchsia_unittest_package("msd_arm_mali_lifecycle_tests") {
  deps = [
    ":arm_mali_include_shard",
    "unit_tests:msd_arm_mali_lifecycle_tests",
  ]

  # Assert that the syslog include shard is included so that we fail at build time
  # rather than at runtime.
  data_deps = [ "//sdk/lib/syslog:client_includes" ]

  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

fuchsia_unittest_package("msd-arm-mali-integration-tests") {
  deps = [
    "..:msd_arm_test",
    "integration",
    "//src/graphics/magma/tests/unit_tests:test_firmware",
  ]
  manifest = "meta/msd_arm_mali_integration_tests.cml"
  test_specs = {
    environments = magma_arm_gpu_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
  test_type = "device"
}

fuchsia_component("vendor-helper-arm-component") {
  testonly = true
  component_name = "vendor-helper"
  manifest = "meta/vendor-helper.cml"
  deps = [ "integration:magma-conformance-vendor-helper-arm" ]
}

fuchsia_test_component("magma-conformance-tests-arm-component") {
  component_name = "magma-conformance-tests"
  manifest = "meta/magma-conformance-tests-arm.cml"
  test_type = "system"
}

fuchsia_test_package("magma-conformance-tests-arm") {
  test_components = [ ":magma-conformance-tests-arm-component" ]
  subpackages =
      [ "//src/graphics/magma/tests/integration:magma-conformance-tests-child" ]
  deps = [ ":vendor-helper-arm-component" ]
  test_specs = {
    environments = magma_arm_gpu_envs
    log_settings = {
      max_severity = "ERROR"
    }
  }
}
