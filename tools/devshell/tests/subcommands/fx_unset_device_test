#!/bin/bash
# Copyright 2025 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

### Test expected behavior of 'fx unset-device'

BT_FILE_DEPS=(
    "scripts/fx"
    "tools/devshell/lib/vars.sh"
    "tools/devshell/unset-device"
    "tools/devshell/lib/fx-cmd-locator.sh"
    "tools/devshell/lib/fx-optional-features.sh"
    "tools/devshell/lib/platform.sh"
    "tools/devshell/lib/generate-ssh-config.sh"
)

declare fx

BT_MKDIR_DEPS=(
    "out/default"
)

BT_SET_UP() {
    source "${BT_TEMP_DIR}/tools/devshell/tests/lib/fuchsia-mock.sh"
    fx="$(btf::setup_fx)"
    FUCHSIA_DIR="${BT_TEMP_DIR}"
}

# Check that the device file is removed when unsetting the device
TEST_fx-unset-device-removes-file() {
    local device_file="${FUCHSIA_DIR}/out/default.device"
    echo "foo" >"${device_file}"

    BT_EXPECT ${fx} unset-device 2>/dev/null
    BT_EXPECT_FILE_DOES_NOT_EXIST ${device_file}
}

# Check that the device file is removed when unsetting the device with a non-default build-dir
TEST_fx-unset-device-writes-file-non-standard-build-dir() {
    local rel_build_dir="out/foo"
    local build_dir="${FUCHSIA_DIR}/${rel_build_dir}"
    local device_file="${build_dir}.device"
    echo "${rel_build_dir}" >"${FUCHSIA_DIR}/.fx-build-dir"
    mkdir -p "${build_dir}"
    cat >"${build_dir}/fx.config" <<EOF
FUCHSIA_BUILD_DIR="${FUCHSIA_DIR}/out/foo"
EOF

    echo "foo" >"${device_file}"

    BT_EXPECT ${fx} unset-device 2>/dev/null
    BT_EXPECT_FILE_DOES_NOT_EXIST ${device_file}
}

# Check that the command fails if used with -d
TEST_fx-unset-device-fails-with-device-flag() {
    BT_EXPECT_FAIL ${fx} -d foo unset-device foo 2>/dev/null
}

BT_RUN_TESTS "$@"
