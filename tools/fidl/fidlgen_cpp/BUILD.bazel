# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@platforms//host:constraints.bzl", "HOST_CONSTRAINTS")

package(default_visibility = ["//visibility:public"])

go_library(
    name = "codegen",
    srcs = [
        "codegen/codegen.go",
    ],
    embedsrcs = [
        "codegen/driver/file_natural_messaging_header.tmpl",
        "codegen/driver/file_natural_messaging_source.tmpl",
        "codegen/driver/file_unified_header.tmpl",
        "codegen/driver/file_wire_header.tmpl",
        "codegen/driver/file_wire_messaging_header.tmpl",
        "codegen/driver/file_wire_messaging_source.tmpl",
        "codegen/driver/fragment_method_client_impl_async_buffer.tmpl",
        "codegen/driver/fragment_method_client_impl_oneway.tmpl",
        "codegen/driver/fragment_method_client_impl_oneway_buffer.tmpl",
        "codegen/driver/fragment_method_client_impl_sync.tmpl",
        "codegen/driver/fragment_method_completer_base.tmpl",
        "codegen/driver/fragment_method_unownedresult.tmpl",
        "codegen/driver/fragment_protocol_caller.tmpl",
        "codegen/driver/fragment_protocol_client_impl.tmpl",
        "codegen/driver/fragment_protocol_event_sender.tmpl",
        "codegen/file_common_types_header.tmpl",
        "codegen/file_common_types_source.tmpl",
        "codegen/file_hlcpp_conversion.tmpl",
        "codegen/file_markers.tmpl",
        "codegen/file_natural_messaging_header.tmpl",
        "codegen/file_natural_messaging_source.tmpl",
        "codegen/file_natural_ostream_header.tmpl",
        "codegen/file_natural_ostream_source.tmpl",
        "codegen/file_natural_types_header.tmpl",
        "codegen/file_natural_types_source.tmpl",
        "codegen/file_test_base.tmpl",
        "codegen/file_type_conversions_header.tmpl",
        "codegen/file_type_conversions_source.tmpl",
        "codegen/file_unified_header.tmpl",
        "codegen/file_wire_header.tmpl",
        "codegen/file_wire_messaging_header.tmpl",
        "codegen/file_wire_messaging_source.tmpl",
        "codegen/file_wire_test_base.tmpl",
        "codegen/file_wire_types_header.tmpl",
        "codegen/file_wire_types_source.tmpl",
        "codegen/fragment_alias.tmpl",
        "codegen/fragment_bits.tmpl",
        "codegen/fragment_const.tmpl",
        "codegen/fragment_enum.tmpl",
        "codegen/fragment_method_client_impl_async.tmpl",
        "codegen/fragment_method_client_impl_async_buffer.tmpl",
        "codegen/fragment_method_client_impl_oneway.tmpl",
        "codegen/fragment_method_client_impl_oneway_buffer.tmpl",
        "codegen/fragment_method_client_impl_sync.tmpl",
        "codegen/fragment_method_completer_base.tmpl",
        "codegen/fragment_method_event.tmpl",
        "codegen/fragment_method_request.tmpl",
        "codegen/fragment_method_response.tmpl",
        "codegen/fragment_method_result.tmpl",
        "codegen/fragment_method_types.tmpl",
        "codegen/fragment_method_unownedresult.tmpl",
        "codegen/fragment_protocol.tmpl",
        "codegen/fragment_protocol_caller.tmpl",
        "codegen/fragment_protocol_client_impl.tmpl",
        "codegen/fragment_protocol_details.tmpl",
        "codegen/fragment_protocol_dispatcher.tmpl",
        "codegen/fragment_protocol_event_handler.tmpl",
        "codegen/fragment_protocol_event_sender.tmpl",
        "codegen/fragment_protocol_interface.tmpl",
        "codegen/fragment_service.tmpl",
        "codegen/fragment_struct.tmpl",
        "codegen/fragment_table.tmpl",
        "codegen/fragment_union.tmpl",
        "codegen/natural_struct.tmpl",
        "codegen/natural_table.tmpl",
        "codegen/natural_union.tmpl",
    ],
    importpath = "go.fuchsia.dev/fuchsia/tools/fidl/fidlgen_cpp/codegen",
    target_compatible_with = HOST_CONSTRAINTS,
    deps = ["//tools/fidl/lib/fidlgen_cpp"],
)

go_binary(
    name = "fidlgen_cpp",
    srcs = ["main.go"],
    target_compatible_with = HOST_CONSTRAINTS,
    deps = [
        ":codegen",
        "//tools/fidl/lib/fidlgen_cpp",
    ],
)
