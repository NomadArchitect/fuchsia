# WARNING: This file is machine generated by fidlgen.

from __future__ import annotations

from dataclasses import dataclass

# TODO(https://fxbug.dev/346628306): Enable type checking here once fidl_codec has stubs
from fidl_codec import add_ir_path, encode_fidl_object  # type: ignore
import sys
import typing
import enum

import fidl

_ir_path = fidl._library.get_fidl_ir_map()[
    "test.foreigntypeinresponseusedthroughcompose"
]
add_ir_path(_ir_path)

import fidl_test_bottom
import fidl_test_middle


class TopServer(fidl._server.ServerBase):
    __fidl_kind__ = "server"
    library = "test.foreigntypeinresponseusedthroughcompose"
    method_map: typing.Dict[int, typing.Callable[..., typing.Any]] = {}


class TopClient(fidl._client.FidlClient):
    __fidl_kind__ = "client"
    library = "test.foreigntypeinresponseusedthroughcompose"
    method_map: typing.Dict[int, typing.Callable[..., typing.Any]] = {}


class TopEventHandler(fidl._client.EventHandlerBase):
    __fidl_kind__ = "event_handler"
    library = "test.foreigntypeinresponseusedthroughcompose"
    method_map: typing.Dict[int, typing.Callable[..., typing.Any]] = {}


TopMarker = fidl._library.ProtocolMarker(
    "(nondiscoverable) test.foreigntypeinresponseusedthroughcompose/Top"
)
