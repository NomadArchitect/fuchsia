###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     fx update-rustc-third-party
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library")
load("@rules_license//rules:license.bzl", "license")
load("@rules_license//rules:package_info.bzl", "package_info")

package(
    default_package_metadata = [
        ":license",
        ":package_info",
    ],
    default_visibility = ["//visibility:public"],
)

package_info(
    name = "package_info",
    package_name = "nix",
    package_url = "https://github.com/nix-rust/nix",
    package_version = "0.29.0",
)

license(
    name = "license",
    license_kinds = ["@rules_license//licenses/spdx:MIT"],
    license_text = "LICENSE",
)

rust_library(
    name = "nix",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = False,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "default",
        "feature",
        "fs",
        "hostname",
        "memoffset",
        "net",
        "process",
        "signal",
        "socket",
        "user",
    ] + select({
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "mount",  # x86_64-unknown-linux-gnu
            "uio",  # x86_64-unknown-linux-gnu
        ],
        "//conditions:default": [],
    }),
    crate_root = "src/lib.rs",
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=nix",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    target_compatible_with = select({
        "@rules_rust//rust/platform:aarch64-unknown-fuchsia": [],
        "@rules_rust//rust/platform:x86_64-unknown-fuchsia": [],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    version = "0.29.0",
    deps = [
        "//third_party/rust_crates/forks/nix-0.29.0:build_script_build",
        "//third_party/rust_crates/vendor/bitflags-2.8.0:bitflags",
        "//third_party/rust_crates/vendor/cfg-if-1.0.0:cfg_if",
        "//third_party/rust_crates/vendor/libc-0.2.169:libc",
        "//third_party/rust_crates/vendor/memoffset-0.9.1:memoffset",
    ],
)

cargo_build_script(
    name = "_bs",
    srcs = glob(
        include = ["**/*.rs"],
        allow_empty = False,
    ),
    compile_data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            "**/*.rs",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "default",
        "feature",
        "fs",
        "hostname",
        "memoffset",
        "net",
        "process",
        "signal",
        "socket",
        "user",
    ] + select({
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "mount",  # x86_64-unknown-linux-gnu
            "uio",  # x86_64-unknown-linux-gnu
        ],
        "//conditions:default": [],
    }),
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        allow_empty = True,
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    edition = "2021",
    pkg_name = "nix",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=nix",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.29.0",
    visibility = ["//visibility:private"],
    deps = [
        "//third_party/rust_crates/empty/cfg_aliases",
    ],
)

alias(
    name = "build_script_build",
    actual = ":_bs",
    tags = ["manual"],
)
